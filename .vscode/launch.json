{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": []
        },
        {
            "name": "Python: Train Experiment",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "with",
                // "dataset=ogbn-arxiv",
                // #################### Vanilla GCN ####################
                // "model_params={\"label\": \"Vanilla GCN\", \"model\": \"GCN\", \"n_filters\": 64, \"dropout\": 0.5,  \"do_normalize_adj_once\": True}"
                // "model_params={\"label\": \"Vanilla GCN\", \"model\": \"GCN\", \"n_filters\": [256, 256], \"with_batchnorm\": True, \"dropout\": 0.5,  \"do_normalize_adj_once\": True}"
                // #################### Vanilla GDC ####################
                // "model_params={\"label\": \"Vanilla GDC\", \"model\": \"GCN\", \"n_filters\": 64, \"dropout\": 0.5, \"gdc_params\": {\"k\": 64, \"alpha\": 0.15, \"use_cpu\": True}}"
                // #################### Soft Medoid GDC (T=0.5) ####################
                "model_params={\"label\": \"Soft Medoid GDC ($T=0.5$)\", \"model\": \"RGNN\", \"n_filters\": 64, \"dropout\": 0.5, \"gdc_params\": {\"k\": 64, \"alpha\": 0.15, \"use_cpu\": True}, \"mean\": \"soft_k_medoid\", \"mean_kwargs\": {\"k\": 64, \"temperature\": 0.5}}"
            ],
            "env": {
                "CUDA_LAUNCH_BLOCKING": "1"
            }
        },
        {
            "name": "Python: Attack Experiment",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "with",
                "seed=1",
                // "artifact_dir=cache",
                // #################### ogbn-products ####################
                // "dataset=ogbn-products",
                // "epsilons=[0, 0.001, 0.0025]",
                // "surrogate_params={\"model\": \"GCN\", \"n_filters\": 64, \"dropout\": 0.5, \"do_checkpoint\": True, \"n_chunks\": 64, \"train_params\": {\"lr\": 1e-2, \"weight_decay\": 1e-3, \"patience\": 100, \"max_epochs\": 3000}}",
                // #################### ogbn-arxiv ####################
                "dataset=ogbn-arxiv",
                // "surrogate_params={\"model\": \"GCN\", \"n_filters\": [256, 256], \"dropout\": 0.5, \"do_cache_adj_prep\": True, \"do_use_sparse_tensor\": True, \"do_normalize_adj_once\": True, \"do_checkpoint\": True, \"n_chunks\": 16, \"train_params\": {\"lr\": 1e-2, \"weight_decay\": 1e-3, \"patience\": 100, \"max_epochs\": 10}}",
                "surrogate_params={\"model\": \"GCN\", \"n_filters\": [256, 256], \"dropout\": 0.5, \"with_batch_norm\": True, \"train_params\": {\"lr\": 1e-2, \"weight_decay\": 1e-3, \"patience\": 100, \"max_epochs\": 200}}",
                // #################### GANG ####################
                // "attack=GANG",
                // "epsilons=[0, 0.001, 0.0025]", // If it should be done quickly
                // "attack_params={\"do_synchronize\": True, \"edge_with_random_reverse\": False, \"edge_step_size\": 25000, \"edge_budget\": 25000}"
                // #################### Greey RBCD ####################
                // "attack=GreedyRBCD",
                // #################### PRBCD ####################
                "attack=PRBCD",
                // "attack_params={\"keep_heuristic\": \"WeightOnly\"}"
                // "attack_params={\"keep_heuristic\": \"WeightOnly\", \"search_space_size\": 15_000_000, \"do_synchronize\": True}"
                // #################### DICE ####################
                // "attack=DICE",
            ],
            // "env": {
            //     "CUDA_LAUNCH_BLOCKING": "1"
            // }
        }
    ]
}